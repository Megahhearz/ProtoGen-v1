syntax = "proto3";

package pb;

option go_package = "./proto";

// Сообщения для SpotInstrumentService
message Market {
  string market_id = 1;
  string name = 2;
  bool enabled = 3;
  google.protobuf.Timestamp deleted_at = 4;
}

message ViewMarketsRequest {
  repeated string user_roles = 1;
}

message ViewMarketsResponse {
  repeated Market markets = 1;
}

// Сообщения для OrderService
message Order {
  string order_id = 1;
  string user_id = 2;
  string market_id = 3;
  string order_type = 4;
  double price = 5;
  double quantity = 6;
  string status = 7;
  google.protobuf.Timestamp created_at = 8;
}

message CreateOrderRequest {
  string user_id = 1;
  string market_id = 2;
  string order_type = 3;
  double price = 4;
  double quantity = 5;
  repeated string user_roles = 6;
}

message CreateOrderResponse {
  string order_id = 1;
  string status = 2;
}

message GetOrderStatusRequest {
  string order_id = 1;
  string user_id = 2;
}

message GetOrderStatusResponse {
  string status = 1;
}

message StreamOrderUpdatesRequest {
  string order_id = 1;
  string user_id = 2;
}

message StreamOrderUpdatesResponse {
  string order_id = 1;
  string status = 2;
}

// Сервис SpotInstrumentService
service SpotInstrumentService {
  rpc ViewMarkets(ViewMarketsRequest) returns (ViewMarketsResponse);
}

// Сервис OrderService
service OrderService {
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
  rpc GetOrderStatus(GetOrderStatusRequest) returns (GetOrderStatusResponse);
  rpc StreamOrderUpdates(StreamOrderUpdatesRequest) returns (stream StreamOrderUpdatesResponse);
}

// Импорт Google API для использования Timestamp
import "google/protobuf/timestamp.proto";